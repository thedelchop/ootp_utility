defmodule OOTPUtility.Imports.League do
  alias OOTPUtility.Imports
  import OOTPUtility.League, only: [import_changeset: 1]

  @headers [
    "league_id",
    "name",
    "abbr",
    "nation_id",
    "language_id",
    "gender",
    "historical_league",
    "logo_file_name",
    "players_path",
    "start_date",
    "preferred_start_date",
    "pitcher_award_name",
    "mvp_award_name",
    "rookie_award_name",
    "defense_award_name",
    "fictional_players",
    "start_fantasy_draft",
    "trading_deadline",
    "winter_meetings",
    "arbitration_offering",
    "show_draft_pool",
    "rosters_expanded",
    "draft_date",
    "rule_5_draft_date",
    "roster_expand_date",
    "trade_deadline_date",
    "allstar_date",
    "days_until_deadline",
    "next_draft_type",
    "parent_league_id",
    "league_state",
    "season_year",
    "historical_year",
    "league_level",
    "stats_detail",
    "historical_import_path",
    "foreigner_percentage",
    "was_ootp6",
    "was_65",
    "allstar_game",
    "auto_schedule_allstar",
    "allstar_team_id0",
    "allstar_team_id1",
    "schedule_file_1",
    "schedule_file_2",
    "rules_rule_5",
    "rules_minor_league_options",
    "rules_trading",
    "rules_draft_pick_trading",
    "rules_financials",
    "rules_amateur_draft",
    "rules_fa_compensation",
    "rules_schedule_balanced",
    "rules_schedule_inter_league",
    "rules_schedule_force_start_day",
    "rules_trades_other_leagues",
    "rules_free_agents_from_other_leagues",
    "rules_free_agents_leave_other_leagues",
    "rules_allstar_game",
    "rules_spring_training",
    "rules_active_roster_limit",
    "rules_secondary_roster_limit",
    "rules_expanded_roster_limit",
    "rules_min_service_days",
    "rules_waiver_period_length",
    "rules_dfa_period_length",
    "rules_fa_minimum_years",
    "rules_salary_arbitration_minimum_years",
    "rules_minor_league_fa_minimum_years",
    "rules_foreigner_limit",
    "rules_foreigner_pitcher_limit",
    "rules_foreigner_hitter_limit",
    "rules_schedule_games_per_team",
    "rules_schedule_typical_series",
    "rules_schedule_preferred_start_day",
    "rules_amateur_draft_rounds",
    "rules_minimum_salary",
    "rules_salary_cap",
    "rules_player_salary0",
    "rules_player_salary1",
    "rules_player_salary2",
    "rules_player_salary3",
    "rules_player_salary4",
    "rules_player_salary5",
    "rules_player_salary6",
    "rules_player_salary7",
    "rules_average_coach_salary",
    "rules_average_attendance",
    "rules_average_national_media_contract",
    "rules_cash_maximum",
    "rules_average_ticket_price",
    "rules_revenue_sharing",
    "rules_national_media_contract_fixed",
    "rules_owner_decides_budget",
    "rules_schedule_auto_adjust_dates",
    "rules_historical_import_rookies",
    "avg_rating_contact",
    "avg_rating_gap",
    "avg_rating_power",
    "avg_rating_eye",
    "avg_rating_strikeouts",
    "avg_rating_stuff",
    "avg_rating_movement",
    "avg_rating_control",
    "avg_rating_fielding0",
    "avg_rating_fielding1",
    "avg_rating_fielding2",
    "avg_rating_fielding3",
    "avg_rating_fielding4",
    "avg_rating_fielding5",
    "avg_rating_fielding6",
    "avg_rating_fielding7",
    "avg_rating_fielding8",
    "avg_rating_fielding9",
    "avg_rating_overall",
    "avg_rating_age",
    "league_totals_ab",
    "league_totals_h",
    "league_totals_d",
    "league_totals_t",
    "league_totals_hr",
    "league_totals_bb",
    "league_totals_hp",
    "league_totals_k",
    "league_totals_pa",
    "league_totals_babip",
    "league_totals_mod_h",
    "league_totals_mod_d",
    "league_totals_mod_t",
    "league_totals_mod_hr",
    "league_totals_mod_bb",
    "league_totals_mod_hp",
    "league_totals_mod_k",
    "league_totals_mod_babip",
    "ml_equivalencies_avg",
    "ml_equivalencies_hr",
    "ml_equivalencies_eb",
    "ml_equivalencies_bb",
    "ml_equivalencies_k",
    "ml_equivalencies_hp",
    "player_creation_modifier_contact",
    "player_creation_modifier_gap",
    "player_creation_modifier_power",
    "player_creation_modifier_eye",
    "player_creation_modifier_strikeouts",
    "player_creation_modifier_stuff",
    "player_creation_modifier_movement",
    "player_creation_modifier_control",
    "player_creation_modifier_speed",
    "player_creation_modifier_fielding",
    "financial_coefficient",
    "world_start_year",
    "current_date",
    "background_color_id",
    "text_color_id",
    "scouting_coach_id"
  ]

  @attributes [
    :league_id,
    :name,
    :abbr,
    :logo_filename,
    :start_date,
    :league_state,
    :season_year,
    :historical_year,
    :league_level,
    :current_date
  ]

  @spec import_from_path(Path.t()) :: {String.t(), integer}
  def import_from_path(path) do
    path
    |> Imports.read_from_path()
    |> Imports.trim_headers(@headers)
    |> Imports.build_attributes_map(@attributes, &csv_to_changeset/1)
    |> Imports.insert_into_database(City)
  end

  def csv_to_changeset(city_as_csv) do
    @headers
    |> Enum.zip(city_as_csv)
    |> Enum.into(%{})
    |> import_changeset()
  end
end
